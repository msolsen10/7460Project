"Min" = min (sp.cond,na.rm=TRUE),
"Std Dev" = sd(sp.cond),deparse.level = 1,na.rm=TRUE)
colnames(sp.cond_stats)<- c("Values")
pH.mv_box <- boxplot(pH.mv,main = "pH mv", ylab = "mV")
pH.mv_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(pH.mv,(0.05),na.rm=TRUE),
"99%"= quantile(pH.mv,(0.99),na.rm=TRUE),
"Mean" = mean(pH.mv,na.rm=TRUE),
"Max" = max(pH.mv,na.rm=TRUE),
"Min" = min (pH.mv,na.rm=TRUE),
"Std Dev" = sd(pH.mv),deparse.level = 1,na.rm=TRUE)
colnames(pH.mv_stats)<- c("Values")
pH_box <- boxplot(pH,main = "pH", ylab = "")
pH_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(pH,(0.05),na.rm=TRUE),
"99%"= quantile(pH,(0.99),na.rm=TRUE),
"Mean" = mean(pH,na.rm=TRUE),
"Max"= max(pH,na.rm=TRUE),
"Min" = min(pH,na.rm=TRUE),
"Std Dev" = sd(pH),deparse.level = 1,na.rm=TRUE)
colnames(pH_stats)<- c("Values")
turbidity_box <- boxplot(turbidity,main = "Turbidity", ylab = "NTU")
turbidity_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(turbidity,(0.05),na.rm=TRUE),
"99%"= quantile(turbidity,(0.99),na.rm=TRUE),
"Mean" = mean(turbidity,na.rm=TRUE),
"Max"=max(turbidity,na.rm=TRUE),
"Min"=min(turbidity,na.rm=TRUE),
"Std Dev" = sd(turbidity),deparse.level = 1,na.rm=TRUE)
colnames(turbidity_stats) <- c("Value")
chlorophyll_box <- boxplot(chlorophyll,main = "Chlorophyll", ylab = "ug/L")
chlorophyll_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(chlorophyll,(0.05),na.rm=TRUE),
"99%"= quantile(chlorophyll,(0.99),na.rm=TRUE),
"Mean" = mean(chlorophyll,na.rm=TRUE),
"Max" = max(chlorophyll,na.rm=TRUE),
"Min" = min (chlorophyll,na.rm=TRUE),
"Std Dev" = sd(chlorophyll),deparse.level = 1,na.rm=TRUE)
colnames(chlorophyll_stats) <- c("Value")
chlorophyll_RFU_box <- boxplot(chlorophyll_RFU,main = "Chlorophyll RFU", ylab = "RFU")
chlorophyll_RFU_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(chlorophyll_RFU,(0.05),na.rm=TRUE),
"99%"= quantile(chlorophyll_RFU,(0.99),na.rm=TRUE),
"Mean" = mean(chlorophyll_RFU,na.rm=TRUE),
"Max" = max(chlorophyll_RFU,na.rm=TRUE),
"Min" = min(chlorophyll_RFU,na.rm=TRUE),
"Std Dev" = sd(chlorophyll_RFU),deparse.level = 1,na.rm=TRUE)
colnames(chlorophyll_RFU_stats) <- c("Value")
ODO_sat_box <- boxplot(ODO_sat,main = "ODO Saturation", ylab = "%")
ODO_sat_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(ODO_sat,(0.05),na.rm=TRUE),
"99%"= quantile(ODO_sat,(0.99),na.rm=TRUE),
"Mean" = mean(ODO_sat,na.rm=TRUE),
"Max" = max(ODO_sat,na.rm=TRUE),
"Min" = min (ODO_sat,na.rm=TRUE),
"Std Dev" = sd(ODO_sat),deparse.level = 1,na.rm=TRUE)
colnames(ODO_sat_stats) <- c("Value")
ODO_box <- boxplot(ODO,main = "ODO", ylab = "mg/L")
ODO_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(ODO,(0.05),na.rm=TRUE),
"99%"= quantile(ODO,(0.99),na.rm=TRUE),
"Mean" = mean(ODO,na.rm=TRUE),
"Max" = max (ODO,na.rm=TRUE),
"Min" = min (ODO,na.rm=TRUE),
"Std Dev" = sd(ODO),deparse.level = 1,na.rm=TRUE)
colnames(ODO_stats) <- c("Value")
phycocyanin_box <- boxplot(phycocyanin,main = "Phycocyanin", ylab = "RFU")
phycocyanin_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(phycocyanin,(0.05),na.rm=TRUE),
"99%"= quantile(phycocyanin,(0.99),na.rm=TRUE),
"Mean" = mean(phycocyanin,na.rm=TRUE),
"Max" = max(phycocyanin,na.rm=TRUE),
"Min" = min (phycocyanin,na.rm=TRUE),
"Std Dev" = sd(phycocyanin),deparse.level = 1,na.rm=TRUE)
colnames(phycocyanin_stats) <- c("Value")
# Temperature QC Data
temp[35 < temp | temp < 0.5]<-NA
temp_plot2<-boxplot(temp,main = "Temperature", ylab = "deg C")
# Spec Conductivity QC Data (Sp.cond = 0, pure water and Sp.cond = 50,000, seawater)
sp.cond[50000 < sp.cond | sp.cond < 100]<-NA
sp.cond_box2 <- boxplot(sp.cond,main = "Specific Conductivity", ylab = "uS/cm")
# pH mv QC Data 200 = 3.5 pH and -250 = 11.3 pH
neg<-function(x) -x
pH.mv[200 < pH.mv | pH.mv < neg(250)]<-NA
pH.mv_box2 <- boxplot(pH.mv,main = "pH mv", ylab = "mV")
# pH QC Data pH > 3.5 and < 10.5
pH[pH<2 | pH > 11]<-NA
pH_box2 <- boxplot(pH,main = "pH", ylab = "")
# Turbidity QC data 0 - 1000 typical range
turbidity[turbidity > 1000 | turbidity < 0.01]<-NA
turbidity_box2 <- boxplot(turbidity,main = "Turbidity", ylab = "NTU")
#QC Chlorophyll instrument reading range of 0-400 ug/L
chlorophyll[0 > chlorophyll | chlorophyll > 400]<- NA
chlorophyll_box2 <- boxplot(chlorophyll,main = "Chlorophyll", ylab = "ug/L")
#QC Chlorophyll RFU
chlorophyll_RFU[chlorophyll_RFU >100 | chlorophyll_RFU < 0 ] <-NA
chlorophyll_RFU_box2 <- boxplot(chlorophyll_RFU,main = "Chlorophyll RFU", ylab = "RFU")
#QC ODO_sat 0-100%
ODO_sat[ODO_sat < 0 | ODO_sat > 100] <- NA
ODO_sat_box2 <- boxplot(ODO_sat,main = "ODO Saturation", ylab = "%")
#QC ODO 0.5-15 mg/L
ODO[ODO < 0.5 | ODO > 15] <- NA
ODO_box2 <- boxplot(ODO,main = "ODO", ylab = "mg/L")
# QC Phycocyanin 0-100 RFU range
phycocyanin[0 > phycocyanin | 100 < phycocyanin]<- NA
phycocyanin_box2 <- boxplot(phycocyanin,main = "Phycocyanin", ylab = "RFU")
#Add NAs if Blank
for (i in nrow(temp)){
if (is.null(temp)){
temp <- NA
}
}
for (i in nrow(sp.cond)){
if (is.null(sp.cond)){
sp.cond <- NA
}
}
for (i in nrow(pH.mv)){
if (is.null(pH.mv)){
pH.mv <- NA
}
}
for (i in nrow(pH)){
if (is.null(pH)){
pH <- NA
}
}
for (i in nrow(turbidity)){
if (is.null(turbidity)){
turbidity <- NA
}
}
for (i in nrow(chlorophyll)){
if (is.null(chlorophyll)){
chlorophyll <- NA
}
}
for (i in nrow(chlorophyll_RFU)){
if (is.null(chlorophyll_RFU)){
chlorophyll_RFU <- NA
}
}
for (i in nrow(ODO_sat)){
if (is.null(ODO_sat)){
ODO_sat <- NA
}
}
for (i in nrow(ODO)){
if (is.null(ODO)){
ODO <- NA
}
}
for (i in nrow(phycocyanin)){
if (is.null(phycocyanin)){
phycocyanin <- NA
}
}
# Merge data
table_f$Temperature<-temp
table_f$Sp.Cond<-sp.cond
table_f$pH.mV<-pH.mv
table_f$pH<- pH
table_f$Turbidity <- turbidity
table_f$Chlorophyll<-chlorophyll
table_f$Chlorophyll.RFU<-chlorophyll_RFU
table_f$ODOSat<-ODO_sat
table_f$ODO<- ODO
table_f$BGA.Phycocyanin.RFU <- phycocyanin
Utah.Lake.at.Provo.Bay <- table_f
setwd("~/R/R_Collab")
write.csv(Utah.Lake.at.Provo.Bay, "Utah.Lake.at.Provo.Bay.csv")
#Output table to Google Cloud install.packages(googledrive)
#library(googledrive)
#drive_auth()
#upload_1<-drive_upload("Utah.Lake.1.mile.West.of.Provo.Marina.csv", path = NULL, name = "Utah.Lake.1.mile.West.of.Provo.Marina")
#id <- drive_get("Utah.Lake.1.mile.West.of.Provo.Marina")
#id
#import the file with Utah.Lake.1.mile.West.of.Provo.Marina<-drive_get()
#setwd("~/R/Project_Shiny")
#download_utah_lake_1 <- drive_download(upload_1, type = "csv")
table_f$Temperature<-temp
table_f$Sp.Cond<-sp.cond
table_f$pH.mV<-pH.mv
table_f$pH<- pH
table_f$Turbidity <- turbidity
table_f$Chlorophyll<-chlorophyll
table_f$Chlorophyll.RFU<-chlorophyll_RFU
table_f$ODOSat<-ODO_sat
table_f$ODO<- ODO
table_f$BGA.Phycocyanin.RFU <- phycocyanin
Utah.Lake.at.Provo.Bay <- table_f
setwd("~/R/R_Collab")
write.csv(Utah.Lake.at.Provo.Bay, "Utah.Lake.at.Provo.Bay.csv")
print(siteid)
#Load table
table<- read.csv("C:/Users/macol/OneDrive/Documents/R/datafiles/Utah_Lake_at_Provo_Bay_-G2-EXO-30001-11-28-2018_18-35.csv")
#Turn table from dataframe to matrix to format
M<- as.matrix(table)
site_name <- colnames(M)
siteid <- site_name [2]
# Format Table for analysis
colnames (M) <- NULL
colnames (M) = M [1,]
M <- M[-c(1),]
site_units <- M [1,]
data.frame(site_units)
M <- M[-c(1),]
table_f<- data.frame(M)
#Assign variables
time <- (table_f$Time..America.Boise.)
temp <- as.numeric(levels(table_f$Temperature))[table_f$Temperature]
sp.cond <- as.numeric(levels(table_f$Sp.Cond))[table_f$Sp.Cond]
pH.mv <- as.numeric(levels(table_f$pH.mV))[table_f$pH.mV]
pH <- as.numeric(levels(table_f$pH))[table_f$pH]
turbidity <- as.numeric(levels(table_f$Turbidity))[table_f$Turbidity]
chlorophyll <- as.numeric(levels(table_f$Chlorophyll))[table_f$Chlorophyll]
chlorophyll_RFU <- as.numeric(levels(table_f$Chlorophyll.RFU))[table_f$Chlorophyll.RFU]
ODO_sat <- as.numeric(levels(table_f$ODOSat))[table_f$ODOSat]
ODO <- as.numeric(levels(table_f$ODO))[table_f$ODO]
phycocyanin <- as.numeric(levels(table_f$BGA.Phycocyanin.RFU))[table_f$BGA.Phycocyanin.RFU]
#Box plots and tables to check values
temp_plot<-boxplot(temp,main = "Temperature", ylab = "deg C")
temp_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(temp,(0.05),na.rm=TRUE),
"99%"= quantile(temp,(0.99),na.rm=TRUE),
"Mean" = mean(temp,na.rm=TRUE),
"Max"= max(temp,na.rm=TRUE),
"Min"= min(temp,na.rm=TRUE),
"Std Dev" = sd(temp),deparse.level = 1,na.rm=TRUE)
colnames(temp_stats)<- c("Values")
sp.cond_box <- boxplot(sp.cond,main = "Specific Conductivity", ylab = "uS/cm")
sp.cond_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(sp.cond,(0.05),na.rm=TRUE),
"99%"= quantile(sp.cond,(0.99),na.rm=TRUE),
"Mean" = mean(sp.cond,na.rm=TRUE),
"Max" = max (sp.cond,na.rm=TRUE),
"Min" = min (sp.cond,na.rm=TRUE),
"Std Dev" = sd(sp.cond),deparse.level = 1,na.rm=TRUE)
colnames(sp.cond_stats)<- c("Values")
pH.mv_box <- boxplot(pH.mv,main = "pH mv", ylab = "mV")
pH.mv_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(pH.mv,(0.05),na.rm=TRUE),
"99%"= quantile(pH.mv,(0.99),na.rm=TRUE),
"Mean" = mean(pH.mv,na.rm=TRUE),
"Max" = max(pH.mv,na.rm=TRUE),
"Min" = min (pH.mv,na.rm=TRUE),
"Std Dev" = sd(pH.mv),deparse.level = 1,na.rm=TRUE)
colnames(pH.mv_stats)<- c("Values")
pH_box <- boxplot(pH,main = "pH", ylab = "")
pH_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(pH,(0.05),na.rm=TRUE),
"99%"= quantile(pH,(0.99),na.rm=TRUE),
"Mean" = mean(pH,na.rm=TRUE),
"Max"= max(pH,na.rm=TRUE),
"Min" = min(pH,na.rm=TRUE),
"Std Dev" = sd(pH),deparse.level = 1,na.rm=TRUE)
colnames(pH_stats)<- c("Values")
turbidity_box <- boxplot(turbidity,main = "Turbidity", ylab = "NTU")
turbidity_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(turbidity,(0.05),na.rm=TRUE),
"99%"= quantile(turbidity,(0.99),na.rm=TRUE),
"Mean" = mean(turbidity,na.rm=TRUE),
"Max"=max(turbidity,na.rm=TRUE),
"Min"=min(turbidity,na.rm=TRUE),
"Std Dev" = sd(turbidity),deparse.level = 1,na.rm=TRUE)
colnames(turbidity_stats) <- c("Value")
chlorophyll_box <- boxplot(chlorophyll,main = "Chlorophyll", ylab = "ug/L")
chlorophyll_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(chlorophyll,(0.05),na.rm=TRUE),
"99%"= quantile(chlorophyll,(0.99),na.rm=TRUE),
"Mean" = mean(chlorophyll,na.rm=TRUE),
"Max" = max(chlorophyll,na.rm=TRUE),
"Min" = min (chlorophyll,na.rm=TRUE),
"Std Dev" = sd(chlorophyll),deparse.level = 1,na.rm=TRUE)
colnames(chlorophyll_stats) <- c("Value")
chlorophyll_RFU_box <- boxplot(chlorophyll_RFU,main = "Chlorophyll RFU", ylab = "RFU")
chlorophyll_RFU_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(chlorophyll_RFU,(0.05),na.rm=TRUE),
"99%"= quantile(chlorophyll_RFU,(0.99),na.rm=TRUE),
"Mean" = mean(chlorophyll_RFU,na.rm=TRUE),
"Max" = max(chlorophyll_RFU,na.rm=TRUE),
"Min" = min(chlorophyll_RFU,na.rm=TRUE),
"Std Dev" = sd(chlorophyll_RFU),deparse.level = 1,na.rm=TRUE)
colnames(chlorophyll_RFU_stats) <- c("Value")
ODO_sat_box <- boxplot(ODO_sat,main = "ODO Saturation", ylab = "%")
ODO_sat_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(ODO_sat,(0.05),na.rm=TRUE),
"99%"= quantile(ODO_sat,(0.99),na.rm=TRUE),
"Mean" = mean(ODO_sat,na.rm=TRUE),
"Max" = max(ODO_sat,na.rm=TRUE),
"Min" = min (ODO_sat,na.rm=TRUE),
"Std Dev" = sd(ODO_sat),deparse.level = 1,na.rm=TRUE)
colnames(ODO_sat_stats) <- c("Value")
ODO_box <- boxplot(ODO,main = "ODO", ylab = "mg/L")
ODO_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(ODO,(0.05),na.rm=TRUE),
"99%"= quantile(ODO,(0.99),na.rm=TRUE),
"Mean" = mean(ODO,na.rm=TRUE),
"Max" = max (ODO,na.rm=TRUE),
"Min" = min (ODO,na.rm=TRUE),
"Std Dev" = sd(ODO),deparse.level = 1,na.rm=TRUE)
colnames(ODO_stats) <- c("Value")
phycocyanin_box <- boxplot(phycocyanin,main = "Phycocyanin", ylab = "RFU")
phycocyanin_stats <- rbind("Site_Location" = siteid,
"5%" = quantile(phycocyanin,(0.05),na.rm=TRUE),
"99%"= quantile(phycocyanin,(0.99),na.rm=TRUE),
"Mean" = mean(phycocyanin,na.rm=TRUE),
"Max" = max(phycocyanin,na.rm=TRUE),
"Min" = min (phycocyanin,na.rm=TRUE),
"Std Dev" = sd(phycocyanin),deparse.level = 1,na.rm=TRUE)
colnames(phycocyanin_stats) <- c("Value")
# Temperature QC Data
temp[35 < temp | temp < 0.5]<-NA
temp_plot2<-boxplot(temp,main = "Temperature", ylab = "deg C")
# Spec Conductivity QC Data (Sp.cond = 0, pure water and Sp.cond = 50,000, seawater)
sp.cond[50000 < sp.cond | sp.cond < 100]<-NA
sp.cond_box2 <- boxplot(sp.cond,main = "Specific Conductivity", ylab = "uS/cm")
# pH mv QC Data 200 = 3.5 pH and -250 = 11.3 pH
neg<-function(x) -x
pH.mv[200 < pH.mv | pH.mv < neg(250)]<-NA
pH.mv_box2 <- boxplot(pH.mv,main = "pH mv", ylab = "mV")
# pH QC Data pH > 3.5 and < 10.5
pH[pH<2 | pH > 11]<-NA
pH_box2 <- boxplot(pH,main = "pH", ylab = "")
# Turbidity QC data 0 - 1000 typical range
turbidity[turbidity > 1000 | turbidity < 0.01]<-NA
turbidity_box2 <- boxplot(turbidity,main = "Turbidity", ylab = "NTU")
#QC Chlorophyll instrument reading range of 0-400 ug/L
chlorophyll[0 > chlorophyll | chlorophyll > 400]<- NA
chlorophyll_box2 <- boxplot(chlorophyll,main = "Chlorophyll", ylab = "ug/L")
#QC Chlorophyll RFU
chlorophyll_RFU[chlorophyll_RFU >100 | chlorophyll_RFU < 0 ] <-NA
chlorophyll_RFU_box2 <- boxplot(chlorophyll_RFU,main = "Chlorophyll RFU", ylab = "RFU")
#QC ODO_sat 0-100%
ODO_sat[ODO_sat < 0 | ODO_sat > 100] <- NA
ODO_sat_box2 <- boxplot(ODO_sat,main = "ODO Saturation", ylab = "%")
#QC ODO 0.5-15 mg/L
ODO[ODO < 0.5 | ODO > 15] <- NA
ODO_box2 <- boxplot(ODO,main = "ODO", ylab = "mg/L")
# QC Phycocyanin 0-100 RFU range
phycocyanin[0 > phycocyanin | 100 < phycocyanin]<- NA
phycocyanin_box2 <- boxplot(phycocyanin,main = "Phycocyanin", ylab = "RFU")
#Add NAs if Blank
for (i in nrow(temp)){
if (is.null(temp)){
temp <- NA
}
}
for (i in nrow(sp.cond)){
if (is.null(sp.cond)){
sp.cond <- NA
}
}
for (i in nrow(pH.mv)){
if (is.null(pH.mv)){
pH.mv <- NA
}
}
for (i in nrow(pH)){
if (is.null(pH)){
pH <- NA
}
}
for (i in nrow(turbidity)){
if (is.null(turbidity)){
turbidity <- NA
}
}
for (i in nrow(chlorophyll)){
if (is.null(chlorophyll)){
chlorophyll <- NA
}
}
for (i in nrow(chlorophyll_RFU)){
if (is.null(chlorophyll_RFU)){
chlorophyll_RFU <- NA
}
}
for (i in nrow(ODO_sat)){
if (is.null(ODO_sat)){
ODO_sat <- NA
}
}
for (i in nrow(ODO)){
if (is.null(ODO)){
ODO <- NA
}
}
for (i in nrow(phycocyanin)){
if (is.null(phycocyanin)){
phycocyanin <- NA
}
}
# Merge data
table_f$Temperature<-temp
table_f$Sp.Cond<-sp.cond
table_f$pH.mV<-pH.mv
table_f$pH<- pH
table_f$Turbidity <- turbidity
table_f$Chlorophyll<-chlorophyll
table_f$Chlorophyll.RFU<-chlorophyll_RFU
table_f$ODOSat<-ODO_sat
table_f$ODO<- ODO
table_f$BGA.Phycocyanin.RFU <- phycocyanin
setwd("~/R/R_Collab")
write.csv(table_f, paste(siteid[1],".csv"))
#Output table to Google Cloud install.packages(googledrive)
#library(googledrive)
#drive_auth()
#upload_1<-drive_upload("Utah.Lake.1.mile.West.of.Provo.Marina.csv", path = NULL, name = "Utah.Lake.1.mile.West.of.Provo.Marina")
#id <- drive_get("Utah.Lake.1.mile.West.of.Provo.Marina")
#id
#import the file with Utah.Lake.1.mile.West.of.Provo.Marina<-drive_get()
#setwd("~/R/Project_Shiny")
#download_utah_lake_1 <- drive_download(upload_1, type = "csv")
keep<- c("Time..America.Boise.","temp", "sp.cond","pH.mv",
"pH","turbidity","chlorophyll","chlorophyll_RFU",
"ODO_sat", "ODO", "phycocyanin")
table_f = table_f[keep]
table_f$Temperature<-temp
table_f$Sp.Cond<-sp.cond
table_f$pH.mV<-pH.mv
table_f$pH<- pH
table_f$Turbidity <- turbidity
table_f$Chlorophyll<-chlorophyll
table_f$Chlorophyll.RFU<-chlorophyll_RFU
table_f$ODOSat<-ODO_sat
table_f$ODO<- ODO
table_f$BGA.Phycocyanin.RFU <- phycocyanin
keep<- c("Time..America.Boise.","temp", "sp.cond","pH.mv",
"pH","turbidity","chlorophyll","chlorophyll_RFU",
"ODO_sat", "ODO", "phycocyanin")
table_f = table_f[keep]
View(table_f)
table_f$Temperature<-temp
table_f$Sp.Cond<-sp.cond
table_f$pH.mV<-pH.mv
table_f$pH<- pH
table_f$Turbidity <- turbidity
table_f$Chlorophyll<-chlorophyll
table_f$Chlorophyll.RFU<-chlorophyll_RFU
table_f$ODOSat<-ODO_sat
table_f$ODO<- ODO
table_f$BGA.Phycocyanin.RFU <- phycocyanin
keep<- c("Time..America.Boise.","Temperature", "Sp.Cond","pH.mv",
"pH","Turbidity","Chlorophyll","Chlorophyll.RFU",
"ODOSat", "ODO", "Phycocyanin.RFU")
table_f = table_f[keep]
keep<- c("Time..America.Boise.","Temperature", "Sp.Cond","pH.mV",
"pH","Turbidity","Chlorophyll","Chlorophyll.RFU",
"ODOSat", "ODO", "Phycocyanin.RFU")
table_f = table_f[keep]
keep<- c("Time..America.Boise.","Temperature", "Sp.Cond","pH.mV",
"pH","Turbidity","Chlorophyll","Chlorophyll.RFU",
"ODOSat", "ODO", "BGA.Phycocyanin.RFU")
table_f = table_f[keep]
View(table_f)
keep<- c("Time..America.Boise.","Temperature", "Sp.Cond","pH.mV",
"pH","Turbidity","Chlorophyll","Chlorophyll.RFU",
"ODOSat", "ODO", "BGA.Phycocyanin.RFU")
table_f = table_f[keep]
setwd("~/R/R_Collab")
write.csv(table_f, paste(siteid[1],".csv"))
print(siteid)
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
View(newbuoydata)
data.class(newbuoydata$Temperature)
mean(newbuoydata$Temperature)
is.na(newbuoydata$Temperature)
is.nan(newbuoydata$Temperature)
x <- data.frame(is.nan(newbuoydata$Temperature))
View(x)
x <- data.frame(is.na(newbuoydata$Temperature))
mean((newbuoydata$Temperature),na.rm = TRUE)
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
install.packages(grid)
install.packages("gridExtra")
library(gridExtra)
install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
shiny::runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
install.packages("knitr")
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
install.packages("tinytex")
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
runApp('~/CVEEN7460/Project/WaterQualityApp/WaterQualityApp')
echo $Path
Sys.which("pdflatex")
Sys.getenv("PATH")
sessionInfo()
shiny::runApp()
install_tinytex()
install_tinytex(force = TRUE)
shiny::runApp()
runApp()
runApp()
install.packages("httpuv")
install.packages("httpuv")
